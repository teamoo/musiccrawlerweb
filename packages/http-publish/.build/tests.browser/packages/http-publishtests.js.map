{"version":3,"file":"\\packages\\http-publish:tests.js","sources":["http-publish/http.publish.tests.client.js"],"names":[],"mappings":";;;;;;;;AAAA,uB;AACA,uD;AACA,C;;AAEA,qC;AACA,wD;;AAEA,yE;AACA,oG;AACA,oF;AACA,oG;AACA,wG;AACA,kH;AACA,G;;AAEA,oF;AACA,oB;AACA,kD;AACA,wB;AACA,iB;AACA,K;AACA,oB;AACA,G;;AAEA,Q;AACA,e;;AAEA,mF;;AAEA,kE;AACA,sC;AACA,gD;AACA,2C;AACA,qB;AACA,kD;AACA,gE;AACA,mC;AACA,iB;AACA,iB;AACA,K;;AAEA,G;;AAEA,sG;;AAEA,mD;AACA,mE;AACA,sC;AACA,gD;AACA,2C;AACA,qB;AACA,kD;AACA,gE;AACA,iB;AACA,K;;AAEA,G;;AAEA,wF;AACA,+C;AACA,oB;AACA,sD;AACA,wB;AACA,iB;AACA,K;AACA,oB;AACA,G;;AAEA,2F;;AAEA,mD;AACA,mE;AACA,kG;AACA,iB;AACA,K;;AAEA,G;;AAEA,mF;;AAEA,0C;;AAEA,oB;AACA,kD;AACA,W;AACA,+B;AACA,K;AACA,4B;AACA,kD;AACA,+E;;AAEA,+B;AACA,oE;AACA,kD;AACA,6C;AACA,oD;AACA,uE;AACA,mB;AACA,O;AACA,K;;AAEA,G;;AAEA,6F;;AAEA,iB;AACA,6C;AACA,W;AACA,sB;AACA,K;AACA,4B;AACA,kD;AACA,+E;AACA,qB;AACA,gF;AACA,iD;AACA,kF;AACA,mB;AACA,O;AACA,K;;AAEA,G;;AAEA,wF;;AAEA,wD;;AAEA,+E;AACA,gC;AACA,+D;AACA,yE;AACA,iB;AACA,K;;AAEA,G;;AAEA,wF;;AAEA,0C;;AAEA,wE;AACA,gC;AACA,8D;AACA,qE;;AAEA,iB;AACA,K;;AAEA,G;;;AAGA,iC;;AAEA,gC;;;AAGA,W;AACA,sB;AACA,qB;AACA,0C;AACA,uB;AACA,oB;AACA,oB;AACA,0B;AACA,gB;AACA,a;AACA,mB;AACA,6B;AACA,0C;AACA,c;AACA,2B;AACA,oB;AACA,c;AACA,gB;AACA,uB","sourcesContent":["function equals(a, b) {\n  return !!(EJSON.stringify(a) === EJSON.stringify(b));\n}\n\nlist = new Meteor.Collection('list');\nconsole.log('Client url: ' + Meteor.absoluteUrl('api'));\n\nTinytest.add('http-publish - client - test environment', function(test) {\n  test.isTrue(typeof _publishHTTP === 'undefined', 'test environment not initialized _publishHTTP');\n  test.isTrue(typeof HTTP !== 'undefined', 'test environment not initialized HTTP');\n  test.isTrue(typeof HTTP.publish !== 'undefined', 'test environment not initialized HTTP.publish');\n  test.isTrue(typeof HTTP.unpublish !== 'undefined', 'test environment not initialized HTTP.unpublish');\n  test.isTrue(typeof HTTP.publishFormats !== 'undefined', 'test environment not initialized HTTP.publishFormats');\n});\n\nTinytest.addAsync('http-publish - client - clearTest', function (test, onComplete) {\n  test.isTrue(true);\n  Meteor.call('clearTest', function(err, result) {\n    test.isTrue(result);\n    onComplete();\n  });\n  test.isTrue(true);\n});\n\nid = '';\nremovedId = '';\n\nTinytest.addAsync('http-publish - client - get list', function (test, onComplete) {\n\n  HTTP.get(Meteor.absoluteUrl('api/list'), function(err, result) {\n    // Test the length of array result\n    var len = result.data && result.data.length;\n    test.isTrue(!!len, 'Result was empty');\n    // Get the object\n    var obj = result.data && result.data[0] || {};\n    test.equal(obj.text, 'OK', 'Didnt get the expected result');\n    // Set the id for the next test\n    id = obj._id;\n    onComplete();\n  });\n\n});\n\nTinytest.addAsync('http-publish - client - get list from custom prefix', function (test, onComplete) {\n\n  // Now test the one we added with a custom prefix\n  HTTP.get(Meteor.absoluteUrl('api2/list'), function(err, result) {\n    // Test the length of array result\n    var len = result.data && result.data.length;\n    test.isTrue(!!len, 'Result was empty');\n    // Get the object\n    var obj = result.data && result.data[0] || {};\n    test.equal(obj.text, 'OK', 'Didnt get the expected result');\n    onComplete();\n  });\n\n});\n\nTinytest.addAsync('http-publish - client - unmountCustom', function (test, onComplete) {\n  // Now unmount the methods with custom prefix\n  test.isTrue(true);\n  Meteor.call('unmountCustom', function(err, result) {\n    test.isTrue(result);\n    onComplete();\n  });\n  test.isTrue(true);\n});\n\nTinytest.addAsync('http-publish - client - custom unmounted', function (test, onComplete) {\n\n  // Now test the one we added with a custom prefix\n  HTTP.get(Meteor.absoluteUrl('api2/list'), function(err, result) {\n    test.isTrue(!!err, \"Should have received an error since we unmounted the custom rest points\");\n    onComplete();\n  });\n\n});\n\nTinytest.addAsync('http-publish - client - put list', function (test, onComplete) {\n\n  test.isTrue(id !== '', 'No id is set?');\n\n  // Update the data\n  HTTP.put(Meteor.absoluteUrl('api/list/' + id), {\n    data: {\n      $set: { text: 'UPDATED' }\n    }\n  }, function(err, result) {\n    var resultId = result.data && result.data._id;\n    test.isTrue(resultId !== undefined, 'Didnt get the expected id in result');\n\n    // Check if data is updated\n    HTTP.get(Meteor.absoluteUrl('api/list'), function(err, result) {\n      var len = result.data && result.data.length;\n      test.isTrue(!!len, 'Result was empty');\n      var obj = result.data && result.data[0] || {};\n      test.equal(obj.text, 'UPDATED', 'Didnt get the expected result');\n      onComplete();\n    });\n  });\n\n});\n\nTinytest.addAsync('http-publish - client - insert/remove list', function (test, onComplete) {\n\n  // Insert a doc\n  HTTP.post(Meteor.absoluteUrl('api/list'), {\n    data: {\n      text: 'INSERTED'\n    }\n  }, function(err, result) {\n    var resultId = result.data && result.data._id;\n    test.isTrue(resultId !== undefined, 'Didnt get the expected id in result');\n    // Delete the doc\n    HTTP.del(Meteor.absoluteUrl('api/list/' + resultId), function(err, result) {\n      removedId = result.data && result.data._id;\n      test.isTrue(removedId !== undefined, 'Didnt get the expected id in result');\n      onComplete();\n    });\n  });\n\n});\n\nTinytest.addAsync('http-publish - client - check removed', function (test, onComplete) {\n\n  test.isTrue(removedId !== '', 'No removedId is set?');\n\n  HTTP.get(Meteor.absoluteUrl('api/list/' + removedId), function(err, result) {\n    var obj = result.data || {};\n    test.isTrue(obj._id === undefined, 'Item was not removed');\n    test.isTrue(err.response.statusCode === 404, 'Item was not removed');\n    onComplete();\n  });\n\n});\n\nTinytest.addAsync('http-publish - client - check findOne', function (test, onComplete) {\n\n  test.isTrue(id !== '', 'No id is set?');\n\n  HTTP.get(Meteor.absoluteUrl('api/list/' + id), function(err, result) {\n    var obj = result.data || {};\n    test.isTrue(obj._id !== undefined, 'expected a document');\n    test.isTrue(obj.text === 'UPDATED', 'expected text === UPDATED');\n\n    onComplete();\n  });\n\n});\n\n\n      // Check if removedId found\n\n      // Check if id still found\n\n\n//Test API:\n//test.isFalse(v, msg)\n//test.isTrue(v, msg)\n//test.equalactual, expected, message, not\n//test.length(obj, len)\n//test.include(s, v)\n//test.isNaN(v, msg)\n//test.isUndefined(v, msg)\n//test.isNotNull\n//test.isNull\n//test.throws(func)\n//test.instanceOf(obj, klass)\n//test.notEqual(actual, expected, message)\n//test.runId()\n//test.exception(exception)\n//test.expect_fail()\n//test.ok(doc)\n//test.fail(doc)\n//test.equal(a, b, msg)\n"]}